---

# Controls whether miniconda will be installed and/or updated
miniconda_install: true
miniconda_update: true

# Installers are not released for every version of conda, you can use this to
# `conda install conda={{ miniconda_version }}` a specific version of conda. If set to `latest` then the role will
# perform a `conda update conda` instead.
miniconda_version: latest

# If you wish to install e.g. a conda-forge version of conda you can do so by setting channels. This causes
# `--override-channels --channel <channel> [--channel <channel> ...]` to be specified on the call to
# `conda install conda...` or `conda update conda`.
miniconda_channels: []

# Use a specific installer version and python version. The default is to use the latest installer. If you specify a
# version, it must exist in https://repo.anaconda.com/miniconda/
#
# The Python major and minor version e.g. '3.9' (or '39') of the installer
miniconda_installer_python: null
# The conda version of the installer
miniconda_installer_version: latest

# List packages to install into conda's base environment
# e.g.
# miniconda_base_env_packages: ['mamba']
miniconda_base_env_packages: []

# Create environments using the provided description. e.g.:
#
# miniconda_conda_environments:
#   python@3.9:
#     channels:  # optional, defaults to miniconda_channels
#       - conda-forge
#       - defaults
#     packages:
#       - python=3.9
miniconda_conda_environments: {}

# Automatically create a conda env using virtualenv from conda-forge for Galaxy (https://galaxyproject.org/)
galaxy_conda_create_env: false
galaxy_conda_env: _galaxy_
galaxy_conda_env_channels:
  - conda-forge
  - defaults
galaxy_conda_env_packages:
  - python=3.6
  - pip>=9
  - virtualenv>=16

# You generally should not need to set these yourself
#
# ansible_distribution is 'MacOSX' if ansible_system is 'Darwin'
# ansible_system is 'Linux' on Linux
miniconda_installer_os: >-
  {%- if ansible_system == 'Darwin' -%}
    MacOSX
  {%- else -%}
    {{ ansible_system }}
  {%- endif -%}

miniconda_installer_arch: "{{ ansible_architecture }}"

# Distribution can be miniforge (default), miniconda, micromamba or anaconda
miniconda_distribution: "miniforge"

# Examples of installer URL's for the supported distributions:
#
#   miniforge:
#     - https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh
#     - https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-MacOSX-arm64.sh
#     - https://github.com/conda-forge/miniforge/releases/download/25.3.0-3/Miniforge3-25.3.0-3-Linux-x86_64.sh
#     - https://github.com/conda-forge/miniforge/releases/download/25.3.0-3/Miniforge3-25.3.0-3-MacOSX-arm64.sh
#
#   miniconda:
#     - https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
#     - https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-arm64.sh
#     - https://repo.anaconda.com/miniconda/Miniconda3-py39_25.5.1-0-Linux-x86_64.sh
#     - https://repo.anaconda.com/miniconda/Miniconda3-py39_25.5.1-0-MacOSX-arm64.sh
#
#   anaconda:
#     - https://repo.anaconda.com/archive/Anaconda3-2025.06-0-Linux-x86_64.sh
#     - https://repo.anaconda.com/archive/Anaconda3-2025.06-0-MacOSX-arm64.sh
#
#   micromamba:
#     - https://github.com/mamba-org/micromamba-releases/releases/latest/download/micromamba-linux-64.tar.bz2
#     - https://github.com/mamba-org/micromamba-releases/releases/latest/download/micromamba-osx-arm64.tar.bz2
#     - https://github.com/mamba-org/micromamba-releases/releases/download/2.3.0-1/micromamba-linux-64.tar.bz2
#     - https://github.com/mamba-org/micromamba-releases/releases/download/2.3.0-1/micromamba-osx-arm64.tar.bz2


# The installer filename (shell script or tarball)
miniconda_installer: >-
  {%- if miniconda_distribution == 'miniforge' -%}
    {%- if miniconda_installer_version == 'latest' -%}
      Miniforge3-{{ miniconda_installer_os }}-{{ miniconda_installer_arch }}.sh
    {%- else -%}
      Miniforge3-{{ miniconda_installer_version }}-{{ miniconda_installer_os }}-{{ miniconda_installer_arch }}.sh
    {%- endif -%}
  {%- elif miniconda_distribution == 'miniconda' -%}
    {%- if miniconda_installer_version == 'latest' -%}
      Miniconda3-latest-{{ miniconda_installer_os }}-{{ miniconda_installer_arch }}.sh
    {%- else -%}
      Miniconda3-py{{ miniconda_installer_python | replace('.', '') }}_
      {{ miniconda_installer_version }}-
      {{ miniconda_installer_os }}-{{ miniconda_installer_arch }}.sh
    {%- endif -%}
  {%- elif miniconda_distribution == 'anaconda' -%}
    Anaconda3-{{ miniconda_installer_version }}-{{ miniconda_installer_os }}-{{ miniconda_installer_arch }}.sh
  {%- elif miniconda_distribution == 'micromamba' -%}
    {%- set micromamba_os_map = {'MacOSX': 'osx', 'Linux': 'linux'} -%}
    {%- set micromamba_arch_map = {'x86_64': '64', 'aarch64': 'aarch64', 'arm64': 'arm64'} -%}
    micromamba-{{ micromamba_os_map[miniconda_installer_os] }}-{{ micromamba_arch_map[miniconda_installer_arch] }}.tar.bz2
  {%- else -%}
    {{ fail("Invalid value for 'miniconda_distribution': " ~ miniconda_distribution) }}
  {%- endif -%}

# The installer download URL (shell script or tarball)
miniconda_installer_url: >-
  {%- if miniconda_distribution == 'miniforge' -%}
    {%- if miniconda_installer_version == 'latest' -%}
      https://github.com/conda-forge/{{ miniconda_distribution }}/releases/latest/download/{{ miniconda_installer }}
    {%- else -%}
      https://github.com/conda-forge/{{ miniconda_distribution }}/releases/download/{{ miniconda_installer_version }}/{{ miniconda_installer }}
    {%- endif -%}
  {%- elif miniconda_distribution == 'miniconda' -%}
    https://repo.anaconda.com/miniconda/{{ miniconda_installer }}
  {%- elif miniconda_distribution == 'anaconda' -%}
    https://repo.anaconda.com/archive/{{ miniconda_installer }}
  {%- elif miniconda_distribution == 'micromamba' -%}
    {%- if miniconda_installer_version == 'latest' -%}
      https://github.com/mamba-org/{{ miniconda_distribution }}-releases/releases/latest/download/{{ miniconda_installer }}
    {%- else -%}
      https://github.com/mamba-org/{{ miniconda_distribution }}-releases/releases/download/{{ miniconda_installer_version }}/{{ miniconda_installer }}
    {%- endif -%}
  {%- else -%}
    {{ fail("Invalid value for 'miniconda_distribution': " ~ miniconda_distribution) }}
  {%- endif -%}

# The shell to call the downloaded installer script with
miniconda_installer_shell: /bin/sh

# Executable for installing/updating conda packages.
miniconda_executable: >-
  {%- if miniconda_distribution == 'miniforge' -%}
    mamba
  {%- elif miniconda_distribution == 'micromamba' -%}
    micromamba
  {%- else -%}
    conda
  {%- endif -%}

# Executable for installing/updating the installer itself.
miniconda_version_executable: >-
  {%- if miniconda_distribution == 'micromamba' -%}
    micromamba
  {%- else -%}
    conda
  {%- endif -%}
